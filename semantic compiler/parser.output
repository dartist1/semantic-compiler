Grammar

    0 $accept: function $end

    1 function: function_header variables body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'
    3                | error ';'

    4 optional_parameters: parameters
    5                    | %empty

    6 parameters: parameter ',' parameters
    7           | parameter

    8 parameter: IDENTIFIER ':' type

    9 variables: variables variable
   10          | %empty

   11 variable: IDENTIFIER ':' type IS statement
   12         | error ';'

   13 type: INTEGER
   14     | REAL
   15     | BOOLEAN

   16 body: BEGIN_ statement END ';'

   17 statement: expression ';'
   18          | IF expression THEN statement ELSE statement ENDIF ';'
   19          | CASE expression IS cases OTHERS ARROW statement ENDCASE ';'
   20          | REDUCE operator reductions ENDREDUCE ';'

   21 cases: cases case
   22      | %empty

   23 case: WHEN INT_LITERAL ARROW statement

   24 operator: ADDOP
   25         | MULOP

   26 reductions: reductions statement
   27           | %empty

   28 expression: expression ANDOP relation
   29           | relation

   30 relation: relation RELOP term
   31         | term

   32 term: term ADDOP factor
   33     | factor

   34 factor: factor MULOP remain
   35       | remain

   36 remain: remain REMOP negation
   37       | negation

   38 negation: NOTOP primary
   39         | primary

   40 primary: '(' expression ')'
   41        | INT_LITERAL
   42        | REAL_LITERAL
   43        | BOOL_LITERAL
   44        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 40
')' (41) 40
',' (44) 6
':' (58) 8 11
';' (59) 2 3 12 16 17 18 19 20
error (256) 3 12
IDENTIFIER (258) 2 8 11 44
INT_LITERAL (259) 23 41
REAL_LITERAL (260) 42
BOOL_LITERAL (261) 43
ADDOP (262) 24 32
MULOP (263) 25 34
RELOP (264) 30
ANDOP (265) 28
REMOP (266) 36
NOTOP (267) 38
BEGIN_ (268) 16
BOOLEAN (269) 15
END (270) 16
ENDREDUCE (271) 20
FUNCTION (272) 2
INTEGER (273) 13
IS (274) 11 19
REDUCE (275) 20
RETURNS (276) 2
IF (277) 18
THEN (278) 18
ELSE (279) 18
OTHERS (280) 19
CASE (281) 19
ARROW (282) 19 23
ENDCASE (283) 19
ENDIF (284) 18
WHEN (285) 23
REAL (286) 14


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
function (38)
    on left: 1, on right: 0
function_header (39)
    on left: 2 3, on right: 1
optional_parameters (40)
    on left: 4 5, on right: 2
parameters (41)
    on left: 6 7, on right: 4 6
parameter (42)
    on left: 8, on right: 6 7
variables (43)
    on left: 9 10, on right: 1 9
variable (44)
    on left: 11 12, on right: 9
type (45)
    on left: 13 14 15, on right: 2 8 11
body (46)
    on left: 16, on right: 1
statement (47)
    on left: 17 18 19 20, on right: 11 16 18 19 23 26
cases (48)
    on left: 21 22, on right: 19 21
case (49)
    on left: 23, on right: 21
operator (50)
    on left: 24 25, on right: 20
reductions (51)
    on left: 26 27, on right: 20 26
expression (52)
    on left: 28 29, on right: 17 18 19 28 40
relation (53)
    on left: 30 31, on right: 28 29 30
term (54)
    on left: 32 33, on right: 30 31 32
factor (55)
    on left: 34 35, on right: 32 33 34
remain (56)
    on left: 36 37, on right: 34 35 36
negation (57)
    on left: 38 39, on right: 36 37
primary (58)
    on left: 40 41 42 43 44, on right: 38 39


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error . ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION . IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . variables body

    $default  reduce using rule 10 (variables)

    variables  go to state 8


State 5

    3 function_header: error ';' .

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER . optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 5 (optional_parameters)

    optional_parameters  go to state 10
    parameters           go to state 11
    parameter            go to state 12


State 7

    0 $accept: function $end .

    $default  accept


State 8

    1 function: function_header variables . body
    9 variables: variables . variable

    error       shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    BEGIN_      shift, and go to state 15

    variable  go to state 16
    body      go to state 17


State 9

    8 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 18


State 10

    2 function_header: FUNCTION IDENTIFIER optional_parameters . RETURNS type ';'

    RETURNS  shift, and go to state 19


State 11

    4 optional_parameters: parameters .

    $default  reduce using rule 4 (optional_parameters)


State 12

    6 parameters: parameter . ',' parameters
    7           | parameter .

    ','  shift, and go to state 20

    $default  reduce using rule 7 (parameters)


State 13

   12 variable: error . ';'

    ';'  shift, and go to state 21


State 14

   11 variable: IDENTIFIER . ':' type IS statement

    ':'  shift, and go to state 22


State 15

   16 body: BEGIN_ . statement END ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 32
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    remain      go to state 37
    negation    go to state 38
    primary     go to state 39


State 16

    9 variables: variables variable .

    $default  reduce using rule 9 (variables)


State 17

    1 function: function_header variables body .

    $default  reduce using rule 1 (function)


State 18

    8 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 40
    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42

    type  go to state 43


State 19

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 40
    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42

    type  go to state 44


State 20

    6 parameters: parameter ',' . parameters

    IDENTIFIER  shift, and go to state 9

    parameters  go to state 45
    parameter   go to state 12


State 21

   12 variable: error ';' .

    $default  reduce using rule 12 (variable)


State 22

   11 variable: IDENTIFIER ':' . type IS statement

    BOOLEAN  shift, and go to state 40
    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42

    type  go to state 46


State 23

   44 primary: IDENTIFIER .

    $default  reduce using rule 44 (primary)


State 24

   41 primary: INT_LITERAL .

    $default  reduce using rule 41 (primary)


State 25

   42 primary: REAL_LITERAL .

    $default  reduce using rule 42 (primary)


State 26

   43 primary: BOOL_LITERAL .

    $default  reduce using rule 43 (primary)


State 27

   38 negation: NOTOP . primary

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    primary  go to state 47


State 28

   20 statement: REDUCE . operator reductions ENDREDUCE ';'

    ADDOP  shift, and go to state 48
    MULOP  shift, and go to state 49

    operator  go to state 50


State 29

   18 statement: IF . expression THEN statement ELSE statement ENDIF ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression  go to state 51
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    remain      go to state 37
    negation    go to state 38
    primary     go to state 39


State 30

   19 statement: CASE . expression IS cases OTHERS ARROW statement ENDCASE ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression  go to state 52
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    remain      go to state 37
    negation    go to state 38
    primary     go to state 39


State 31

   40 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression  go to state 53
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    remain      go to state 37
    negation    go to state 38
    primary     go to state 39


State 32

   16 body: BEGIN_ statement . END ';'

    END  shift, and go to state 54


State 33

   17 statement: expression . ';'
   28 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 55
    ';'    shift, and go to state 56


State 34

   29 expression: relation .
   30 relation: relation . RELOP term

    RELOP  shift, and go to state 57

    $default  reduce using rule 29 (expression)


State 35

   31 relation: term .
   32 term: term . ADDOP factor

    ADDOP  shift, and go to state 58

    $default  reduce using rule 31 (relation)


State 36

   33 term: factor .
   34 factor: factor . MULOP remain

    MULOP  shift, and go to state 59

    $default  reduce using rule 33 (term)


State 37

   35 factor: remain .
   36 remain: remain . REMOP negation

    REMOP  shift, and go to state 60

    $default  reduce using rule 35 (factor)


State 38

   37 remain: negation .

    $default  reduce using rule 37 (remain)


State 39

   39 negation: primary .

    $default  reduce using rule 39 (negation)


State 40

   15 type: BOOLEAN .

    $default  reduce using rule 15 (type)


State 41

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


State 42

   14 type: REAL .

    $default  reduce using rule 14 (type)


State 43

    8 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 8 (parameter)


State 44

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type . ';'

    ';'  shift, and go to state 61


State 45

    6 parameters: parameter ',' parameters .

    $default  reduce using rule 6 (parameters)


State 46

   11 variable: IDENTIFIER ':' type . IS statement

    IS  shift, and go to state 62


State 47

   38 negation: NOTOP primary .

    $default  reduce using rule 38 (negation)


State 48

   24 operator: ADDOP .

    $default  reduce using rule 24 (operator)


State 49

   25 operator: MULOP .

    $default  reduce using rule 25 (operator)


State 50

   20 statement: REDUCE operator . reductions ENDREDUCE ';'

    $default  reduce using rule 27 (reductions)

    reductions  go to state 63


State 51

   18 statement: IF expression . THEN statement ELSE statement ENDIF ';'
   28 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 55
    THEN   shift, and go to state 64


State 52

   19 statement: CASE expression . IS cases OTHERS ARROW statement ENDCASE ';'
   28 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 55
    IS     shift, and go to state 65


State 53

   28 expression: expression . ANDOP relation
   40 primary: '(' expression . ')'

    ANDOP  shift, and go to state 55
    ')'    shift, and go to state 66


State 54

   16 body: BEGIN_ statement END . ';'

    ';'  shift, and go to state 67


State 55

   28 expression: expression ANDOP . relation

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    relation  go to state 68
    term      go to state 35
    factor    go to state 36
    remain    go to state 37
    negation  go to state 38
    primary   go to state 39


State 56

   17 statement: expression ';' .

    $default  reduce using rule 17 (statement)


State 57

   30 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    term      go to state 69
    factor    go to state 36
    remain    go to state 37
    negation  go to state 38
    primary   go to state 39


State 58

   32 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    factor    go to state 70
    remain    go to state 37
    negation  go to state 38
    primary   go to state 39


State 59

   34 factor: factor MULOP . remain

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    remain    go to state 71
    negation  go to state 38
    primary   go to state 39


State 60

   36 remain: remain REMOP . negation

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    negation  go to state 72
    primary   go to state 39


State 61

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 62

   11 variable: IDENTIFIER ':' type IS . statement

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 73
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    remain      go to state 37
    negation    go to state 38
    primary     go to state 39


State 63

   20 statement: REDUCE operator reductions . ENDREDUCE ';'
   26 reductions: reductions . statement

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    ENDREDUCE     shift, and go to state 74
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 75
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    remain      go to state 37
    negation    go to state 38
    primary     go to state 39


State 64

   18 statement: IF expression THEN . statement ELSE statement ENDIF ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 76
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    remain      go to state 37
    negation    go to state 38
    primary     go to state 39


State 65

   19 statement: CASE expression IS . cases OTHERS ARROW statement ENDCASE ';'

    $default  reduce using rule 22 (cases)

    cases  go to state 77


State 66

   40 primary: '(' expression ')' .

    $default  reduce using rule 40 (primary)


State 67

   16 body: BEGIN_ statement END ';' .

    $default  reduce using rule 16 (body)


State 68

   28 expression: expression ANDOP relation .
   30 relation: relation . RELOP term

    RELOP  shift, and go to state 57

    $default  reduce using rule 28 (expression)


State 69

   30 relation: relation RELOP term .
   32 term: term . ADDOP factor

    ADDOP  shift, and go to state 58

    $default  reduce using rule 30 (relation)


State 70

   32 term: term ADDOP factor .
   34 factor: factor . MULOP remain

    MULOP  shift, and go to state 59

    $default  reduce using rule 32 (term)


State 71

   34 factor: factor MULOP remain .
   36 remain: remain . REMOP negation

    REMOP  shift, and go to state 60

    $default  reduce using rule 34 (factor)


State 72

   36 remain: remain REMOP negation .

    $default  reduce using rule 36 (remain)


State 73

   11 variable: IDENTIFIER ':' type IS statement .

    $default  reduce using rule 11 (variable)


State 74

   20 statement: REDUCE operator reductions ENDREDUCE . ';'

    ';'  shift, and go to state 78


State 75

   26 reductions: reductions statement .

    $default  reduce using rule 26 (reductions)


State 76

   18 statement: IF expression THEN statement . ELSE statement ENDIF ';'

    ELSE  shift, and go to state 79


State 77

   19 statement: CASE expression IS cases . OTHERS ARROW statement ENDCASE ';'
   21 cases: cases . case

    OTHERS  shift, and go to state 80
    WHEN    shift, and go to state 81

    case  go to state 82


State 78

   20 statement: REDUCE operator reductions ENDREDUCE ';' .

    $default  reduce using rule 20 (statement)


State 79

   18 statement: IF expression THEN statement ELSE . statement ENDIF ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 83
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    remain      go to state 37
    negation    go to state 38
    primary     go to state 39


State 80

   19 statement: CASE expression IS cases OTHERS . ARROW statement ENDCASE ';'

    ARROW  shift, and go to state 84


State 81

   23 case: WHEN . INT_LITERAL ARROW statement

    INT_LITERAL  shift, and go to state 85


State 82

   21 cases: cases case .

    $default  reduce using rule 21 (cases)


State 83

   18 statement: IF expression THEN statement ELSE statement . ENDIF ';'

    ENDIF  shift, and go to state 86


State 84

   19 statement: CASE expression IS cases OTHERS ARROW . statement ENDCASE ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 87
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    remain      go to state 37
    negation    go to state 38
    primary     go to state 39


State 85

   23 case: WHEN INT_LITERAL . ARROW statement

    ARROW  shift, and go to state 88


State 86

   18 statement: IF expression THEN statement ELSE statement ENDIF . ';'

    ';'  shift, and go to state 89


State 87

   19 statement: CASE expression IS cases OTHERS ARROW statement . ENDCASE ';'

    ENDCASE  shift, and go to state 90


State 88

   23 case: WHEN INT_LITERAL ARROW . statement

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 91
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    remain      go to state 37
    negation    go to state 38
    primary     go to state 39


State 89

   18 statement: IF expression THEN statement ELSE statement ENDIF ';' .

    $default  reduce using rule 18 (statement)


State 90

   19 statement: CASE expression IS cases OTHERS ARROW statement ENDCASE . ';'

    ';'  shift, and go to state 92


State 91

   23 case: WHEN INT_LITERAL ARROW statement .

    $default  reduce using rule 23 (case)


State 92

   19 statement: CASE expression IS cases OTHERS ARROW statement ENDCASE ';' .

    $default  reduce using rule 19 (statement)
